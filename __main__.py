#!/usr/bin/env python
# -*- coding: utf-8 -*
import os
import random

# import sys


#####
## Variabeln
#####
VAR_MAX_BACKGROUND_IMAGES = 10
VAR_BACKGROUNDIMAGE_RELATIVE_FOLDER = os.path.join("..", "..", "..", "Desktophintergrund")
VAR_VDS_SETTINGFILE_BASE = os.path.join("..", "..", "..",
                                        "Windows10_OnlySoftware",
                                        "VirtualDesktop",
                                        "Windows.10.Virtual.Desktop.Enhancer.0.11.1",
                                        "settings.ini.BASE_FOR_WALLPAPER_APPEND")

VAR_VDS_SETTINGFILE_OUTPUT = os.path.join("..", "..", "..",
                                          "Windows10_OnlySoftware",
                                          "VirtualDesktop",
                                          "Windows.10.Virtual.Desktop.Enhancer.0.11.1",
                                          "settings.ini")

## Automatische Variabeln
AUTO_CURRENTDIR_PATH = os.path.dirname(os.path.realpath(__file__))
AUTO_BACKGROUNDIMAGE_DIR = os.path.abspath(os.path.join(AUTO_CURRENTDIR_PATH, VAR_BACKGROUNDIMAGE_RELATIVE_FOLDER))
AUTO_SETTINGFILE_BASE = os.path.abspath(os.path.join(AUTO_CURRENTDIR_PATH, VAR_VDS_SETTINGFILE_BASE))
AUTO_SETTINGFILE_OUTPUT = os.path.abspath(os.path.join(AUTO_CURRENTDIR_PATH, VAR_VDS_SETTINGFILE_OUTPUT))

# print(AUTO_BACKGROUNDIMAGE_DIR)
# print(AUTO_SETTINGFILE_BASE)
# print(AUTO_SETTINGFILE_OUTPUT)
# exit(2)

#####
##### Startup - nur wenn via. dieser Datei gestartet wird #####
#####
if __name__ == "__main__":
    print("")
    print("#### Start ####")
    print("Durchsuche Bilder in Verzeichnis: ", AUTO_BACKGROUNDIMAGE_DIR)

    ## Alle Bilder
    AUTO_ALL_BGIMAGES_SORTED = [f for f in os.listdir(AUTO_BACKGROUNDIMAGE_DIR)
                                if os.path.isfile(os.path.join(AUTO_BACKGROUNDIMAGE_DIR, f))]

    ## Abbruch wenn gar keine Bilder vorhanden sind
    if len(AUTO_ALL_BGIMAGES_SORTED) <= 0:
        print("Keine Bilder gefunden in: ", AUTO_BACKGROUNDIMAGE_DIR, " --> Skriptabbruch")
        print("### Exit(1) ###")
        exit(1)

    print("Es sind [[", len(AUTO_ALL_BGIMAGES_SORTED), "]] Bilder da")

    ## Reihenfolge shuffeln
    AUTO_ALL_BGIMAGES = random.sample(AUTO_ALL_BGIMAGES_SORTED, len(AUTO_ALL_BGIMAGES_SORTED))

    ##### Datei settings.ini neu erzeugen #####
    print("")
    print("##### settings.ini Erzeugen #####")

    ## Base einlesen
    fileobject_base = open(AUTO_SETTINGFILE_BASE, "r")
    content = fileobject_base.read()
    fileobject_base.close()

    ## Output-Datei entfernen
    if os.path.isfile(AUTO_SETTINGFILE_OUTPUT):
        os.remove(AUTO_SETTINGFILE_OUTPUT)

    ## Output mit Base ersetzen/leeren

    ## Output mit Wallpaper anhaengen
    fileobject_output = open(AUTO_SETTINGFILE_OUTPUT, "w", newline='')
    fileobject_output.write(content)
    fileobject_output.write(os.linesep)
    fileobject_output.write(os.linesep)
    fileobject_output.write(os.linesep)
    fileobject_output.write(os.linesep)
    fileobject_output.write(os.linesep)
    fileobject_output.write(";#####")
    fileobject_output.write(os.linesep)
    fileobject_output.write(";##### Autogenerated #####")
    fileobject_output.write(os.linesep)
    fileobject_output.write(";#####")
    fileobject_output.write(os.linesep)
    fileobject_output.write(os.linesep)
    fileobject_output.write(os.linesep)

    ## Wallpaper-Abschnitt schreiben
    print()
    print("[Wallpapers]")
    fileobject_output.write("[Wallpapers]")

    i = 0
    for item in AUTO_ALL_BGIMAGES:
        i += 1
        line_to_print = str(i) + "=" + os.path.join(AUTO_BACKGROUNDIMAGE_DIR, item)
        print(line_to_print)

        fileobject_output.write(os.linesep)
        fileobject_output.write(line_to_print)

        if i >= VAR_MAX_BACKGROUND_IMAGES:
            break

    fileobject_output.write(os.linesep)
    fileobject_output.write(os.linesep)
    fileobject_output.close()

    print("")
    print("")
    print("")
    print("### Ende ###")
